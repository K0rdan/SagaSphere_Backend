version: "3"

services:
    sagasphere:
        container_name: sagasphere_base
        image: node:7-slim
        #network_mode: "host"
        volumes:
            - ./sagasphere:/usr/src/sagasphere
        ports: 
            - "${SAGASPHERE_PORT}:${SAGASPHERE_PORT}"
        environment:
            - DEBUG=true
            # Environment variables to setup MySQL connexion
            - SAGASPHERE_MYSQL_HOST=${SAGASPHERE_MYSQL_HOST}
            - SAGASPHERE_MYSQL_LOCALADDRESS=${SAGASPHERE_MYSQL_LOCALADDRESS}
            - SAGASPHERE_MYSQL_PORT=${SAGASPHERE_MYSQL_PORT}
            - SAGASPHERE_MYSQL_USER=${SAGASPHERE_MYSQL_USER}
            - SAGASPHERE_MYSQL_PASSWORD=${SAGASPHERE_MYSQL_PASSWORD}
            - SAGASPHERE_MYSQL_DATABASE=${SAGASPHERE_MYSQL_DATABASE}
        command: ["bash","-c","cd /usr/src/sagasphere && yarn build && yarn start"]
    sagasphere_mysql:
        container_name: sagasphere_mysql
        image: mysql:latest
        volumes: 
            # Default MySQL data volume
            - /var/lib/mysql
            # Init database with our SQL file
            - ./sagasphere_mysql/${SAGASPHERE_ENV}/:/docker-entrypoint-initdb.d/
        expose:
            # Default MySQL listening port 
            - "${SAGASPHERE_MYSQL_PORT}"
        ports:
            - "${SAGASPHERE_MYSQL_PORT}:${SAGASPHERE_MYSQL_PORT}"
        environment:
            # Environment variables preceed by SAGASPHERE_MYSQL_
            - MYSQL_ROOT_PASSWORD=${SAGASPHERE_MYSQL_PASSWORD}
            - MYSQL_DATABASE=${SAGASPHERE_MYSQL_DATABASE}
    sagasphere_phpmyadmin:
        container_name: sagasphere_phpmyadmin
        image: phpmyadmin/phpmyadmin:latest
        volumes:
            # Login sessions to MySQL
            - /sessions
        ports:
            - "${SAGASPHERE_PMA_PORT}:80"
        environment:
            # Environment variables preceed by PMA_
            - PMA_HOST=${SAGASPHERE_PMA_HOST}
        depends_on:
            - sagasphere_mysql
    sagasphere_sessions:
        container_name: sagasphere_sessions
        image: redis:alpine
        ports:
            - "${SAGASPHERE_REDIS_PORT}:${SAGASPHERE_REDIS_PORT}"
        environment:
            # Environment variables preceed by REDIS_
            - REDIS_PORT=${SAGASPHERE_REDIS_PORT}